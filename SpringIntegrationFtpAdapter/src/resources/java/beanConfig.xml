<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.1.xsd
		http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-4.1.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd">

	<int:channel id="ftpChannel"></int:channel>
	<int-ftp:inbound-channel-adapter channel="ftpChannel"
	session-factory="ftpSessionFactory" local-directory="D:\FTP"
	remote-directory="/*.csv"></int-ftp:inbound-channel-adapter>
	
	<int:transformer input-channel="ftpChannel" ref="transformBean" method="transform" 
	output-channel="insertIntoDB">
	
	</int:transformer>
	<bean id="transformBean" class="demo.integration.transform.Transform"></bean>
	
	<int:poller default="true" fixed-rate="1000"></int:poller>
	
	<bean id="ftpSessionFactory" class="org.springframework.integration.ftp.session.DefaultFtpSessionFactory">
		<property name="host" value="10.102.100.158"/>
		<property name="username" value="admin"/>
		<property name="password" value="password"/>
	</bean>
	
	<int:service-activator id="ab" input-channel="ftpChannel" ref="firstMessageService" 
	method="recieveMessage" >
	</int:service-activator>

	<bean id="firstMessageService" class="demo.integration.hello.FirstMessageService" />
	
	<context:component-scan base-package="batch" />
	<context:property-placeholder location="batch.properties"
		ignore-unresolvable="true" />

	<jdbc:initialize-database enabled="true"
		data-source="dataSource" ignore-failures="ALL">
		<jdbc:script
			location="classpath:org/springframework/batch/core/schema-mysql.sql"
			execution="INIT" />
	</jdbc:initialize-database>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName" value="${dataSource.driverClassName}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
		<property name="url" value="${dataSource.url}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
		p:jobRepository-ref="jobRepository" />

	<bean id="jobRegistryBeanPostProcessor"
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
		p:jobRegistry-ref="jobRegistry" />


	<batch:job id="insertIntoDbFromCsvJob" job-repository="jobRepository">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="csvFileReader" writer="jdbcItemWriter"
					commit-interval="5" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="csvFileReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		p:resource="registrations.csv">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer"
						p:delimiter=","
						p:names="firstName,lastName,company,address,city,state,zip,county,url,phoneNumber,fax" />
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper"
						p:targetType="batch.demo.beans.UserRegistration" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="jdbcItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter"
		p:assertUpdates="true" p:dataSource-ref="dataSource">
		<property name="sql">
			<value>
				<![CDATA[
				insert into USER_REGISTRATION(
				FIRST_NAME, LAST_NAME, COMPANY, ADDRESS,
				CITY, STATE, ZIP, COUNTY,
				URL, PHONE_NUMBER, FAX )
				values ( :firstName, :lastName, :company, :address, :city , :state, :zip, :county, :url, :phoneNumber, :fax )
				]]>
			</value>
		</property>
		
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"></bean>
		</property>
	</bean>
</beans>


</beans>
